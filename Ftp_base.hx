package wordpress;
@:native('\\ftp_base')
extern class Ftp_base {
    public var LocalEcho:Dynamic;
    public var Verbose:Dynamic;
    public var OS_local:Dynamic;
    public var OS_remote:Dynamic;
    public var _lastaction:Dynamic;
    public var _errors:Dynamic;
    public var _type:Dynamic;
    public var _umask:Dynamic;
    public var _timeout:Dynamic;
    public var _passive:Dynamic;
    public var _host:Dynamic;
    public var _fullhost:Dynamic;
    public var _port:Dynamic;
    public var _datahost:Dynamic;
    public var _dataport:Dynamic;
    public var _ftp_control_sock:Dynamic;
    public var _ftp_data_sock:Dynamic;
    public var _ftp_temp_sock:Dynamic;
    public var _ftp_buff_size:Dynamic;
    public var _login:Dynamic;
    public var _password:Dynamic;
    public var _connected:Dynamic;
    public var _ready:Dynamic;
    public var _code:Dynamic;
    public var _message:Dynamic;
    public var _can_restore:Dynamic;
    public var _port_available:Dynamic;
    public var _curtype:Dynamic;
    public var _features:Dynamic;
    public var _error_array:Dynamic;
    public var AuthorizedTransferMode:Dynamic;
    public var OS_FullName:Dynamic;
    public var _eol_code:Dynamic;
    public var AutoAsciiExt:Dynamic;
    public function __construct(?port_mode:Dynamic, ?verb:Dynamic, ?le:Dynamic):Dynamic;
    public function ftp_base(?port_mode:Dynamic):Dynamic;
    public function parselisting(line:Dynamic):Dynamic;
    public function SendMSG(?message:Dynamic, ?crlf:Dynamic):Dynamic;
    public function SetType(?mode:Dynamic):Dynamic;
    public function _settype(?mode:Dynamic):Dynamic;
    public function Passive(?pasv:Dynamic):Dynamic;
    public function SetServer(host:Dynamic, ?port:Dynamic, ?reconnect:Dynamic):Dynamic;
    public function SetUmask(?umask:Dynamic):Dynamic;
    public function SetTimeout(?timeout:Dynamic):Dynamic;
    public function connect(?server:Dynamic):Dynamic;
    public function quit(?force:Dynamic):Dynamic;
    public function login(?user:Dynamic, ?pass:Dynamic):Dynamic;
    public function pwd():Dynamic;
    public function cdup():Dynamic;
    public function chdir(pathname:Dynamic):Dynamic;
    public function rmdir(pathname:Dynamic):Dynamic;
    public function mkdir(pathname:Dynamic):Dynamic;
    public function rename(from:Dynamic, to:Dynamic):Dynamic;
    public function filesize(pathname:Dynamic):Dynamic;
    public function abort():Dynamic;
    public function mdtm(pathname:Dynamic):Dynamic;
    public function systype():Dynamic;
    public function delete(pathname:Dynamic):Dynamic;
    public function site(command:Dynamic, ?fnction:Dynamic):Dynamic;
    public function chmod(pathname:Dynamic, mode:Dynamic):Dynamic;
    public function restore(from:Dynamic):Dynamic;
    public function features():Dynamic;
    public function rawlist(?pathname:Dynamic, ?arg:Dynamic):Dynamic;
    public function nlist(?pathname:Dynamic, ?arg:Dynamic):Dynamic;
    public function is_exists(pathname:Dynamic):Dynamic;
    public function file_exists(pathname:Dynamic):Dynamic;
    public function fget(fp:Dynamic, remotefile:Dynamic, ?rest:Dynamic):Dynamic;
    public function get(remotefile:Dynamic, ?localfile:Dynamic, ?rest:Dynamic):Dynamic;
    public function fput(remotefile:Dynamic, fp:Dynamic, ?rest:Dynamic):Dynamic;
    public function put(localfile:Dynamic, ?remotefile:Dynamic, ?rest:Dynamic):Dynamic;
    public function mput(?local:Dynamic, ?remote:Dynamic, ?continious:Dynamic):Dynamic;
    public function mget(remote:Dynamic, ?local:Dynamic, ?continious:Dynamic):Dynamic;
    public function mdel(remote:Dynamic, ?continious:Dynamic):Dynamic;
    public function mmkdir(dir:Dynamic, ?mode:Dynamic):Dynamic;
    public function glob(pattern:Dynamic, ?handle:Dynamic):Dynamic;
    public function glob_pattern_match(pattern:Dynamic, string:Dynamic):Dynamic;
    public function glob_regexp(pattern:Dynamic, probe:Dynamic):Dynamic;
    public function dirlist(remote:Dynamic):Dynamic;
    public function _checkCode():Dynamic;
    public function _list(?arg:Dynamic, ?cmd:Dynamic, ?fnction:Dynamic):Dynamic;
    public function PushError(fctname:Dynamic, msg:Dynamic, ?desc:Dynamic):Dynamic;
    public function PopError():Dynamic;
}

