package wordpress;
@:native('\\WP_Customize_Manager')
extern class WP_Customize_Manager {
    protected var theme:Dynamic;
    protected var original_stylesheet:Dynamic;
    protected var previewing:Bool;
    public var widgets:Dynamic;
    public var nav_menus:Dynamic;
    public var selective_refresh:Dynamic;
    protected var settings:Array<Dynamic>;
    protected var containers:Array<Dynamic>;
    protected var panels:Array<Dynamic>;
    protected var components:Array<Dynamic>;
    protected var sections:Array<Dynamic>;
    protected var controls:Array<Dynamic>;
    protected var registered_panel_types:Array<Dynamic>;
    protected var registered_section_types:Array<Dynamic>;
    protected var registered_control_types:Array<Dynamic>;
    protected var preview_url:Dynamic;
    protected var return_url:Dynamic;
    protected var autofocus:Array<Dynamic>;
    protected var messenger_channel:Dynamic;
    protected var autosaved:Bool;
    protected var branching:Bool;
    protected var settings_previewed:Bool;
    protected var saved_starter_content_changeset:Bool;
    protected var pending_starter_content_settings_ids:Array<Dynamic>;
    protected var store_changeset_revision:Dynamic;
    public function __construct(?args:Array<Dynamic>):Dynamic;
    public function doing_ajax(?action:Dynamic):Bool;
    protected function wp_die(ajax_message:Dynamic, ?message:String):Dynamic;
    public function wp_die_handler():Dynamic;
    public function setup_theme():Dynamic;
    public function establish_loaded_changeset():Dynamic;
    public function after_setup_theme():Dynamic;
    public function start_previewing_theme():Dynamic;
    public function stop_previewing_theme():Dynamic;
    public function settings_previewed():Bool;
    public function autosaved():Bool;
    public function branching():Bool;
    public function changeset_uuid():String;
    public function theme():wordpress.WP_Theme;
    public function settings():Array<Dynamic>;
    public function controls():Array<Dynamic>;
    public function containers():Array<Dynamic>;
    public function sections():Array<Dynamic>;
    public function panels():Array<Dynamic>;
    public function is_theme_active():Bool;
    public function wp_loaded():Dynamic;
    public function wp_redirect_status(status:Int):Int;
    public function find_changeset_post_id(uuid:String):Dynamic;
    protected function get_changeset_posts(?args:Array<Dynamic>):Array<wordpress.WP_Post>;
    protected function dismiss_user_auto_draft_changesets():Int;
    public function changeset_post_id():Dynamic;
    protected function get_changeset_post_data(post_id:Int):Dynamic;
    public function changeset_data():Array<Dynamic>;
    public function import_theme_starter_content(?starter_content:Array<Dynamic>):Dynamic;
    protected function prepare_starter_content_attachments(attachments:Array<Dynamic>):Array<Dynamic>;
    public function _save_starter_content_changeset():Dynamic;
    public function unsanitized_post_values(?args:Array<Dynamic>):Array<Dynamic>;
    public function post_value(setting:wordpress.WP_Customize_Setting, ?default_:Dynamic):Dynamic;
    public function set_post_value(setting_id:String, value:Dynamic):Dynamic;
    public function customize_preview_init():Dynamic;
    public function filter_iframe_security_headers(headers:Array<Dynamic>):Array<Dynamic>;
    public function add_state_query_params(url:String):String;
    public function customize_preview_override_404_status():Dynamic;
    public function customize_preview_base():Dynamic;
    public function customize_preview_html5():Dynamic;
    public function customize_preview_loading_style():Dynamic;
    public function remove_frameless_preview_messenger_channel():Dynamic;
    public function customize_preview_settings():Dynamic;
    public function customize_preview_signature():Dynamic;
    public function remove_preview_signature(?return_:Dynamic):Dynamic;
    public function is_preview():Bool;
    public function get_template():String;
    public function get_stylesheet():String;
    public function get_template_root():String;
    public function get_stylesheet_root():String;
    public function current_theme(current_theme:Dynamic):String;
    public function validate_setting_values(setting_values:Array<Dynamic>, ?options:Array<Dynamic>):Array<Dynamic>;
    public function prepare_setting_validity_for_js(validity:Dynamic):Dynamic;
    public function save():Dynamic;
    public function save_changeset_post(?args:Array<Dynamic>):Dynamic;
    public function trash_changeset_post(post:Dynamic):Dynamic;
    public function handle_changeset_trash_request():Dynamic;
    public function grant_edit_post_capability_for_changeset(caps:Array<String>, cap:Array<String>, user_id:Int, args:Array<Dynamic>):Array<Dynamic>;
    public function set_changeset_lock(changeset_post_id:Int, ?take_over:Bool):Dynamic;
    public function refresh_changeset_lock(changeset_post_id:Int):Dynamic;
    public function add_customize_screen_to_heartbeat_settings(settings:Array<Dynamic>):Array<Dynamic>;
    protected function get_lock_user_data(user_id:Int):Dynamic;
    public function check_changeset_lock_with_heartbeat(response:Array<Dynamic>, data:Array<Dynamic>, screen_id:String):Array<Dynamic>;
    public function handle_override_changeset_lock_request():Dynamic;
    public function _filter_revision_post_has_changed(post_has_changed:Bool, last_revision:wordpress.WP_Post, post:Bool):Bool;
    public function _publish_changeset_values(changeset_post_id:Int):Dynamic;
    protected function update_stashed_theme_mod_settings(inactive_theme_mod_settings:Array<Dynamic>):Dynamic;
    public function refresh_nonces():Dynamic;
    public function handle_dismiss_autosave_or_lock_request():Dynamic;
    public function add_setting(id:Dynamic, ?args:Array<Dynamic>):wordpress.WP_Customize_Setting;
    public function add_dynamic_settings(setting_ids:Array<Dynamic>):Array<Dynamic>;
    public function get_setting(id:String):Dynamic;
    public function remove_setting(id:String):Dynamic;
    public function add_panel(id:Dynamic, ?args:Array<Dynamic>):wordpress.WP_Customize_Panel;
    public function get_panel(id:String):Dynamic;
    public function remove_panel(id:String):Dynamic;
    public function register_panel_type(panel:String):Dynamic;
    public function render_panel_templates():Dynamic;
    public function add_section(id:Dynamic, ?args:Array<Dynamic>):wordpress.WP_Customize_Section;
    public function get_section(id:String):Dynamic;
    public function remove_section(id:String):Dynamic;
    public function register_section_type(section:String):Dynamic;
    public function render_section_templates():Dynamic;
    public function add_control(id:Dynamic, ?args:Array<Dynamic>):wordpress.WP_Customize_Control;
    public function get_control(id:String):Dynamic;
    public function remove_control(id:String):Dynamic;
    public function register_control_type(control:String):Dynamic;
    public function render_control_templates():Dynamic;
    protected function _cmp_priority(a:Dynamic, b:Dynamic):Int;
    public function prepare_controls():Dynamic;
    public function enqueue_control_scripts():Dynamic;
    public function is_ios():Bool;
    public function get_document_title_template():String;
    public function set_preview_url(preview_url:String):Dynamic;
    public function get_preview_url():String;
    public function is_cross_domain():Bool;
    public function get_allowed_urls():Array<Dynamic>;
    public function get_messenger_channel():String;
    public function set_return_url(return_url:String):Dynamic;
    public function get_return_url():String;
    public function set_autofocus(autofocus:Array<Dynamic>):Dynamic;
    public function get_autofocus():Array<Dynamic>;
    public function get_nonces():Array<Dynamic>;
    public function customize_pane_settings():Dynamic;
    public function get_previewable_devices():Array<Dynamic>;
    public function register_controls():Dynamic;
    public function has_published_pages():Bool;
    public function register_dynamic_settings():Dynamic;
    public function handle_load_themes_request():Dynamic;
    public function _sanitize_header_textcolor(color:String):Dynamic;
    public function _sanitize_background_setting(value:String, setting:wordpress.WP_Customize_Setting):Dynamic;
    public function export_header_video_settings(response:Array<Dynamic>, selective_refresh:wordpress.WP_Customize_Selective_Refresh, partials:Array<Dynamic>):Array<Dynamic>;
    public function _validate_header_video(validity:wordpress.WP_Error, value:Dynamic):Dynamic;
    public function _validate_external_header_video(validity:wordpress.WP_Error, value:Dynamic):Dynamic;
    public function _sanitize_external_header_video(value:String):String;
    public function _render_custom_logo_partial():String;
}

