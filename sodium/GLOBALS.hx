package wordpress.sodium;
extern class GLOBALS {
    public static inline function bin2hex(string:String):String return php.Syntax.call('\\Sodium\\bin2hex', string);
    public static inline function compare(a:String, b:String):Int return php.Syntax.call('\\Sodium\\compare', a, b);
    public static inline function crypto_aead_aes256gcm_decrypt(message:String, assocData:String, nonce:String, key:String):Dynamic return php.Syntax.call('\\Sodium\\crypto_aead_aes256gcm_decrypt', message, assocData, nonce, key);
    public static inline function crypto_aead_aes256gcm_encrypt(message:String, assocData:String, nonce:String, key:String):String return php.Syntax.call('\\Sodium\\crypto_aead_aes256gcm_encrypt', message, assocData, nonce, key);
    public static inline function crypto_aead_aes256gcm_is_available():Bool return php.Syntax.call('\\Sodium\\crypto_aead_aes256gcm_is_available');
    public static inline function crypto_aead_chacha20poly1305_decrypt(message:String, assocData:String, nonce:String, key:String):Dynamic return php.Syntax.call('\\Sodium\\crypto_aead_chacha20poly1305_decrypt', message, assocData, nonce, key);
    public static inline function crypto_aead_chacha20poly1305_encrypt(message:String, assocData:String, nonce:String, key:String):String return php.Syntax.call('\\Sodium\\crypto_aead_chacha20poly1305_encrypt', message, assocData, nonce, key);
    public static inline function crypto_aead_chacha20poly1305_ietf_decrypt(message:String, assocData:String, nonce:String, key:String):Dynamic return php.Syntax.call('\\Sodium\\crypto_aead_chacha20poly1305_ietf_decrypt', message, assocData, nonce, key);
    public static inline function crypto_aead_chacha20poly1305_ietf_encrypt(message:String, assocData:String, nonce:String, key:String):String return php.Syntax.call('\\Sodium\\crypto_aead_chacha20poly1305_ietf_encrypt', message, assocData, nonce, key);
    public static inline function crypto_auth(message:String, key:String):String return php.Syntax.call('\\Sodium\\crypto_auth', message, key);
    public static inline function crypto_auth_verify(mac:String, message:String, key:String):Bool return php.Syntax.call('\\Sodium\\crypto_auth_verify', mac, message, key);
    public static inline function crypto_box(message:String, nonce:String, kp:String):String return php.Syntax.call('\\Sodium\\crypto_box', message, nonce, kp);
    public static inline function crypto_box_keypair():String return php.Syntax.call('\\Sodium\\crypto_box_keypair');
    public static inline function crypto_box_keypair_from_secretkey_and_publickey(sk:String, pk:String):String return php.Syntax.call('\\Sodium\\crypto_box_keypair_from_secretkey_and_publickey', sk, pk);
    public static inline function crypto_box_open(message:String, nonce:String, kp:String):Dynamic return php.Syntax.call('\\Sodium\\crypto_box_open', message, nonce, kp);
    public static inline function crypto_box_publickey(keypair:String):String return php.Syntax.call('\\Sodium\\crypto_box_publickey', keypair);
    public static inline function crypto_box_publickey_from_secretkey(sk:String):String return php.Syntax.call('\\Sodium\\crypto_box_publickey_from_secretkey', sk);
    public static inline function crypto_box_seal(message:String, publicKey:String):String return php.Syntax.call('\\Sodium\\crypto_box_seal', message, publicKey);
    public static inline function crypto_box_seal_open(message:String, kp:String):Dynamic return php.Syntax.call('\\Sodium\\crypto_box_seal_open', message, kp);
    public static inline function crypto_box_secretkey(keypair:String):String return php.Syntax.call('\\Sodium\\crypto_box_secretkey', keypair);
    public static inline function crypto_generichash(message:String, ?key:Dynamic, ?outLen:Int):String return php.Syntax.call('\\Sodium\\crypto_generichash', message, key, outLen);
    public static inline function crypto_generichash_final(ctx:Dynamic, ?outputLength:Int):String return php.Syntax.call('\\Sodium\\crypto_generichash_final', ctx, outputLength);
    public static inline function crypto_generichash_init(?key:Dynamic, ?outLen:Int):String return php.Syntax.call('\\Sodium\\crypto_generichash_init', key, outLen);
    public static inline function crypto_generichash_update(ctx:Dynamic, ?message:String):Void return php.Syntax.call('\\Sodium\\crypto_generichash_update', ctx, message);
    public static inline function crypto_kx(my_secret:String, their_public:String, client_public:String, server_public:String):String return php.Syntax.call('\\Sodium\\crypto_kx', my_secret, their_public, client_public, server_public);
    public static inline function crypto_pwhash(outlen:Int, passwd:String, salt:String, opslimit:Int, memlimit:Int):String return php.Syntax.call('\\Sodium\\crypto_pwhash', outlen, passwd, salt, opslimit, memlimit);
    public static inline function crypto_pwhash_str(passwd:String, opslimit:Int, memlimit:Int):String return php.Syntax.call('\\Sodium\\crypto_pwhash_str', passwd, opslimit, memlimit);
    public static inline function crypto_pwhash_str_verify(passwd:String, hash:String):Bool return php.Syntax.call('\\Sodium\\crypto_pwhash_str_verify', passwd, hash);
    public static inline function crypto_pwhash_scryptsalsa208sha256(outlen:Int, passwd:String, salt:String, opslimit:Int, memlimit:Int):String return php.Syntax.call('\\Sodium\\crypto_pwhash_scryptsalsa208sha256', outlen, passwd, salt, opslimit, memlimit);
    public static inline function crypto_pwhash_scryptsalsa208sha256_str(passwd:String, opslimit:Int, memlimit:Int):String return php.Syntax.call('\\Sodium\\crypto_pwhash_scryptsalsa208sha256_str', passwd, opslimit, memlimit);
    public static inline function crypto_pwhash_scryptsalsa208sha256_str_verify(passwd:String, hash:String):Bool return php.Syntax.call('\\Sodium\\crypto_pwhash_scryptsalsa208sha256_str_verify', passwd, hash);
    public static inline function crypto_scalarmult(n:String, p:String):String return php.Syntax.call('\\Sodium\\crypto_scalarmult', n, p);
    public static inline function crypto_scalarmult_base(n:String):String return php.Syntax.call('\\Sodium\\crypto_scalarmult_base', n);
    public static inline function crypto_secretbox(message:String, nonce:String, key:String):String return php.Syntax.call('\\Sodium\\crypto_secretbox', message, nonce, key);
    public static inline function crypto_secretbox_open(message:String, nonce:String, key:String):Dynamic return php.Syntax.call('\\Sodium\\crypto_secretbox_open', message, nonce, key);
    public static inline function crypto_shorthash(message:String, ?key:String):String return php.Syntax.call('\\Sodium\\crypto_shorthash', message, key);
    public static inline function crypto_sign(message:String, sk:String):String return php.Syntax.call('\\Sodium\\crypto_sign', message, sk);
    public static inline function crypto_sign_detached(message:String, sk:String):String return php.Syntax.call('\\Sodium\\crypto_sign_detached', message, sk);
    public static inline function crypto_sign_keypair():String return php.Syntax.call('\\Sodium\\crypto_sign_keypair');
    public static inline function crypto_sign_open(signedMessage:String, pk:String):Dynamic return php.Syntax.call('\\Sodium\\crypto_sign_open', signedMessage, pk);
    public static inline function crypto_sign_publickey(keypair:String):String return php.Syntax.call('\\Sodium\\crypto_sign_publickey', keypair);
    public static inline function crypto_sign_publickey_from_secretkey(sk:String):String return php.Syntax.call('\\Sodium\\crypto_sign_publickey_from_secretkey', sk);
    public static inline function crypto_sign_secretkey(keypair:String):String return php.Syntax.call('\\Sodium\\crypto_sign_secretkey', keypair);
    public static inline function crypto_sign_seed_keypair(seed:String):String return php.Syntax.call('\\Sodium\\crypto_sign_seed_keypair', seed);
    public static inline function crypto_sign_verify_detached(signature:String, message:String, pk:String):Bool return php.Syntax.call('\\Sodium\\crypto_sign_verify_detached', signature, message, pk);
    public static inline function crypto_sign_ed25519_pk_to_curve25519(pk:String):String return php.Syntax.call('\\Sodium\\crypto_sign_ed25519_pk_to_curve25519', pk);
    public static inline function crypto_sign_ed25519_sk_to_curve25519(sk:String):String return php.Syntax.call('\\Sodium\\crypto_sign_ed25519_sk_to_curve25519', sk);
    public static inline function crypto_stream(len:Int, nonce:String, key:String):String return php.Syntax.call('\\Sodium\\crypto_stream', len, nonce, key);
    public static inline function crypto_stream_xor(message:String, nonce:String, key:String):String return php.Syntax.call('\\Sodium\\crypto_stream_xor', message, nonce, key);
    public static inline function hex2bin(string:String):String return php.Syntax.call('\\Sodium\\hex2bin', string);
    public static inline function memcmp(a:String, b:String):Int return php.Syntax.call('\\Sodium\\memcmp', a, b);
    public static inline function memzero(str:String):Void return php.Syntax.call('\\Sodium\\memzero', str);
    public static inline function randombytes_buf(amount:Int):String return php.Syntax.call('\\Sodium\\randombytes_buf', amount);
    public static inline function randombytes_uniform(upperLimit:Int):Int return php.Syntax.call('\\Sodium\\randombytes_uniform', upperLimit);
    public static inline function randombytes_random16():Int return php.Syntax.call('\\Sodium\\randombytes_random16');
}
