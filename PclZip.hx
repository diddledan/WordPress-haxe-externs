package wordpress;
@:native('\\PclZip')
extern class PclZip {
    public var zipname:Dynamic;
    public var zip_fd:Dynamic;
    public var error_code:Dynamic;
    public var error_string:Dynamic;
    public var magic_quotes_status:Dynamic;
    public function __construct(p_zipname:Dynamic):Dynamic;
    public function PclZip(p_zipname:Dynamic):Dynamic;
    public function create(p_filelist:Dynamic):Dynamic;
    public function add(p_filelist:Dynamic):Dynamic;
    public function listContent():Dynamic;
    public function extract():Dynamic;
    public function extractByIndex(p_index:Dynamic):Dynamic;
    public function delete():Dynamic;
    public function deleteByIndex(p_index:Dynamic):Dynamic;
    public function properties():Dynamic;
    public function duplicate(p_archive:Dynamic):Dynamic;
    public function merge(p_archive_to_add:Dynamic):Dynamic;
    public function errorCode():Dynamic;
    public function errorName(?p_with_code:Dynamic):Dynamic;
    public function errorInfo(?p_full:Dynamic):Dynamic;
    public function privCheckFormat(?p_level:Dynamic):Dynamic;
    public function privParseOptions(p_options_list:Dynamic, p_size:Dynamic, v_result_list:Dynamic, ?v_requested_options:Dynamic):Dynamic;
    public function privOptionDefaultThreshold(p_options:Dynamic):Dynamic;
    public function privFileDescrParseAtt(p_file_list:Dynamic, p_filedescr:Dynamic, v_options:Dynamic, ?v_requested_options:Dynamic):Dynamic;
    public function privFileDescrExpand(p_filedescr_list:Dynamic, p_options:Dynamic):Dynamic;
    public function privCreate(p_filedescr_list:Dynamic, p_result_list:Dynamic, p_options:Dynamic):Dynamic;
    public function privAdd(p_filedescr_list:Dynamic, p_result_list:Dynamic, p_options:Dynamic):Dynamic;
    public function privOpenFd(p_mode:Dynamic):Dynamic;
    public function privCloseFd():Dynamic;
    public function privAddList(p_filedescr_list:Dynamic, p_result_list:Dynamic, p_options:Dynamic):Dynamic;
    public function privAddFileList(p_filedescr_list:Dynamic, p_result_list:Dynamic, p_options:Dynamic):Dynamic;
    public function privAddFile(p_filedescr:Dynamic, p_header:Dynamic, p_options:Dynamic):Dynamic;
    public function privAddFileUsingTempFile(p_filedescr:Dynamic, p_header:Dynamic, p_options:Dynamic):Dynamic;
    public function privCalculateStoredFilename(p_filedescr:Dynamic, p_options:Dynamic):Dynamic;
    public function privWriteFileHeader(p_header:Dynamic):Dynamic;
    public function privWriteCentralFileHeader(p_header:Dynamic):Dynamic;
    public function privWriteCentralHeader(p_nb_entries:Dynamic, p_size:Dynamic, p_offset:Dynamic, p_comment:Dynamic):Dynamic;
    public function privList(p_list:Dynamic):Dynamic;
    public function privConvertHeader2FileInfo(p_header:Dynamic, p_info:Dynamic):Dynamic;
    public function privExtractByRule(p_file_list:Dynamic, p_path:Dynamic, p_remove_path:Dynamic, p_remove_all_path:Dynamic, p_options:Dynamic):Dynamic;
    public function privExtractFile(p_entry:Dynamic, p_path:Dynamic, p_remove_path:Dynamic, p_remove_all_path:Dynamic, p_options:Dynamic):Dynamic;
    public function privExtractFileUsingTempFile(p_entry:Dynamic, p_options:Dynamic):Dynamic;
    public function privExtractFileInOutput(p_entry:Dynamic, p_options:Dynamic):Dynamic;
    public function privExtractFileAsString(p_entry:Dynamic, p_string:Dynamic, p_options:Dynamic):Dynamic;
    public function privReadFileHeader(p_header:Dynamic):Dynamic;
    public function privReadCentralFileHeader(p_header:Dynamic):Dynamic;
    public function privCheckFileHeaders(p_local_header:Dynamic, p_central_header:Dynamic):Dynamic;
    public function privReadEndCentralDir(p_central_dir:Dynamic):Dynamic;
    public function privDeleteByRule(p_result_list:Dynamic, p_options:Dynamic):Dynamic;
    public function privDirCheck(p_dir:Dynamic, ?p_is_dir:Dynamic):Dynamic;
    public function privMerge(p_archive_to_add:Dynamic):Dynamic;
    public function privDuplicate(p_archive_filename:Dynamic):Dynamic;
    public function privErrorLog(?p_error_code:Dynamic, ?p_error_string:Dynamic):Dynamic;
    public function privErrorReset():Dynamic;
    public function privDisableMagicQuotes():Dynamic;
    public function privSwapBackMagicQuotes():Dynamic;
}

