package wordpress;
@:native('\\ParagonIE_Sodium_Compat')
extern class ParagonIE_Sodium_Compat {
    @:phpClassConst static public final LIBRARY_VERSION_MAJOR:Dynamic;
    @:phpClassConst static public final LIBRARY_VERSION_MINOR:Dynamic;
    @:phpClassConst static public final VERSION_STRING:Dynamic;
    @:phpClassConst static public final BASE64_VARIANT_ORIGINAL:Dynamic;
    @:phpClassConst static public final BASE64_VARIANT_ORIGINAL_NO_PADDING:Dynamic;
    @:phpClassConst static public final BASE64_VARIANT_URLSAFE:Dynamic;
    @:phpClassConst static public final BASE64_VARIANT_URLSAFE_NO_PADDING:Dynamic;
    @:phpClassConst static public final CRYPTO_AEAD_AES256GCM_KEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AEAD_AES256GCM_NSECBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AEAD_AES256GCM_NPUBBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AEAD_AES256GCM_ABYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AEAD_CHACHA20POLY1305_NSECBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AEAD_CHACHA20POLY1305_NPUBBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AEAD_CHACHA20POLY1305_ABYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AEAD_CHACHA20POLY1305_IETF_KEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AEAD_CHACHA20POLY1305_IETF_NSECBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AEAD_CHACHA20POLY1305_IETF_NPUBBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AEAD_CHACHA20POLY1305_IETF_ABYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AEAD_XCHACHA20POLY1305_IETF_KEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AEAD_XCHACHA20POLY1305_IETF_NSECBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AEAD_XCHACHA20POLY1305_IETF_NPUBBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AEAD_XCHACHA20POLY1305_IETF_ABYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AUTH_BYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_AUTH_KEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_BOX_SEALBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_BOX_SECRETKEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_BOX_PUBLICKEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_BOX_KEYPAIRBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_BOX_MACBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_BOX_NONCEBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_BOX_SEEDBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_KDF_BYTES_MIN:Dynamic;
    @:phpClassConst static public final CRYPTO_KDF_BYTES_MAX:Dynamic;
    @:phpClassConst static public final CRYPTO_KDF_CONTEXTBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_KDF_KEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_KX_BYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_KX_PRIMITIVE:Dynamic;
    @:phpClassConst static public final CRYPTO_KX_SEEDBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_KX_KEYPAIRBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_KX_PUBLICKEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_KX_SECRETKEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_KX_SESSIONKEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_GENERICHASH_BYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_GENERICHASH_BYTES_MIN:Dynamic;
    @:phpClassConst static public final CRYPTO_GENERICHASH_BYTES_MAX:Dynamic;
    @:phpClassConst static public final CRYPTO_GENERICHASH_KEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_GENERICHASH_KEYBYTES_MIN:Dynamic;
    @:phpClassConst static public final CRYPTO_GENERICHASH_KEYBYTES_MAX:Dynamic;
    @:phpClassConst static public final CRYPTO_PWHASH_SALTBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_PWHASH_STRPREFIX:Dynamic;
    @:phpClassConst static public final CRYPTO_PWHASH_ALG_ARGON2I13:Dynamic;
    @:phpClassConst static public final CRYPTO_PWHASH_ALG_ARGON2ID13:Dynamic;
    @:phpClassConst static public final CRYPTO_PWHASH_MEMLIMIT_INTERACTIVE:Dynamic;
    @:phpClassConst static public final CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE:Dynamic;
    @:phpClassConst static public final CRYPTO_PWHASH_MEMLIMIT_MODERATE:Dynamic;
    @:phpClassConst static public final CRYPTO_PWHASH_OPSLIMIT_MODERATE:Dynamic;
    @:phpClassConst static public final CRYPTO_PWHASH_MEMLIMIT_SENSITIVE:Dynamic;
    @:phpClassConst static public final CRYPTO_PWHASH_OPSLIMIT_SENSITIVE:Dynamic;
    @:phpClassConst static public final CRYPTO_PWHASH_SCRYPTSALSA208SHA256_SALTBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_PWHASH_SCRYPTSALSA208SHA256_STRPREFIX:Dynamic;
    @:phpClassConst static public final CRYPTO_PWHASH_SCRYPTSALSA208SHA256_OPSLIMIT_INTERACTIVE:Dynamic;
    @:phpClassConst static public final CRYPTO_PWHASH_SCRYPTSALSA208SHA256_MEMLIMIT_INTERACTIVE:Dynamic;
    @:phpClassConst static public final CRYPTO_PWHASH_SCRYPTSALSA208SHA256_OPSLIMIT_SENSITIVE:Dynamic;
    @:phpClassConst static public final CRYPTO_PWHASH_SCRYPTSALSA208SHA256_MEMLIMIT_SENSITIVE:Dynamic;
    @:phpClassConst static public final CRYPTO_SCALARMULT_BYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_SCALARMULT_SCALARBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_SHORTHASH_BYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_SHORTHASH_KEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_SECRETBOX_KEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_SECRETBOX_MACBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_SECRETBOX_NONCEBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_ABYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_HEADERBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_KEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_PUSH:Dynamic;
    @:phpClassConst static public final CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_PULL:Dynamic;
    @:phpClassConst static public final CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_REKEY:Dynamic;
    @:phpClassConst static public final CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_FINAL:Dynamic;
    @:phpClassConst static public final CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_MESSAGEBYTES_MAX:Dynamic;
    @:phpClassConst static public final CRYPTO_SIGN_BYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_SIGN_SEEDBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_SIGN_PUBLICKEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_SIGN_SECRETKEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_SIGN_KEYPAIRBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_STREAM_KEYBYTES:Dynamic;
    @:phpClassConst static public final CRYPTO_STREAM_NONCEBYTES:Dynamic;
    public var disableFallbackForUnitTests:Bool;
    public var fastMult:Bool;
    public static function add(val:String, addv:String):Void;
    public static function base642bin(encoded:String, variant:Int, ?ignore:String):String;
    public static function bin2base64(decoded:String, variant:Int):String;
    public static function bin2hex(string:String):String;
    public static function compare(left:String, right:String):Int;
    public static function crypto_aead_aes256gcm_is_available():Bool;
    public static function crypto_aead_aes256gcm_decrypt(?ciphertext:String, ?assocData:String, ?nonce:String, ?key:String):Dynamic;
    public static function crypto_aead_aes256gcm_encrypt(?plaintext:String, ?assocData:String, ?nonce:String, ?key:String):String;
    public static function crypto_aead_aes256gcm_keygen():String;
    public static function crypto_aead_chacha20poly1305_decrypt(?ciphertext:String, ?assocData:String, ?nonce:String, ?key:String):String;
    public static function crypto_aead_chacha20poly1305_encrypt(?plaintext:String, ?assocData:String, ?nonce:String, ?key:String):String;
    public static function crypto_aead_chacha20poly1305_ietf_decrypt(?ciphertext:String, ?assocData:String, ?nonce:String, ?key:String):String;
    public static function crypto_aead_chacha20poly1305_keygen():String;
    public static function crypto_aead_chacha20poly1305_ietf_encrypt(?plaintext:String, ?assocData:String, ?nonce:String, ?key:String):String;
    public static function crypto_aead_chacha20poly1305_ietf_keygen():String;
    public static function crypto_aead_xchacha20poly1305_ietf_decrypt(?ciphertext:String, ?assocData:String, ?nonce:String, ?key:String, ?dontFallback:Bool):Dynamic;
    public static function crypto_aead_xchacha20poly1305_ietf_encrypt(?plaintext:String, ?assocData:String, ?nonce:String, ?key:String, ?dontFallback:Bool):String;
    public static function crypto_aead_xchacha20poly1305_ietf_keygen():String;
    public static function crypto_auth(message:String, key:String):String;
    public static function crypto_auth_keygen():String;
    public static function crypto_auth_verify(mac:String, message:String, key:String):Bool;
    public static function crypto_box(plaintext:String, nonce:String, keypair:String):String;
    public static function crypto_box_seal(plaintext:String, publicKey:String):String;
    public static function crypto_box_seal_open(ciphertext:String, keypair:String):String;
    public static function crypto_box_keypair():String;
    public static function crypto_box_keypair_from_secretkey_and_publickey(secretKey:String, publicKey:String):String;
    public static function crypto_box_open(ciphertext:String, nonce:String, keypair:String):String;
    public static function crypto_box_publickey(keypair:String):String;
    public static function crypto_box_publickey_from_secretkey(secretKey:String):String;
    public static function crypto_box_secretkey(keypair:String):String;
    public static function crypto_box_seed_keypair(seed:String):String;
    public static function crypto_generichash(message:String, ?key:Dynamic, ?length:Int):String;
    public static function crypto_generichash_final(ctx:String, ?length:Int):String;
    public static function crypto_generichash_init(?key:Dynamic, ?length:Int):String;
    public static function crypto_generichash_init_salt_personal(?key:Dynamic, ?length:Int, ?salt:String, ?personal:String):String;
    public static function crypto_generichash_update(ctx:String, message:String):Void;
    public static function crypto_generichash_keygen():String;
    public static function crypto_kdf_derive_from_key(subkey_len:Int, subkey_id:Int, context:String, key:String):String;
    public static function crypto_kdf_keygen():String;
    public static function crypto_kx(my_secret:String, their_public:String, client_public:String, server_public:String):String;
    public static function crypto_kx_seed_keypair(seed:String):String;
    public static function crypto_kx_keypair():String;
    public static function crypto_kx_client_session_keys(keypair:String, serverPublicKey:String):wordpress.Array{0:;
    public static function crypto_kx_server_session_keys(keypair:String, clientPublicKey:String):wordpress.Array{0:;
    public static function crypto_kx_secretkey(kp:String):String;
    public static function crypto_kx_publickey(kp:String):String;
    public static function crypto_pwhash(outlen:Int, passwd:String, salt:String, opslimit:Int, memlimit:Int, ?alg:Dynamic):String;
    public static function crypto_pwhash_is_available():Bool;
    public static function crypto_pwhash_str(passwd:String, opslimit:Int, memlimit:Int):String;
    public static function crypto_pwhash_str_needs_rehash(hash:String, opslimit:Int, memlimit:Int):Bool;
    public static function crypto_pwhash_str_verify(passwd:String, hash:String):Bool;
    public static function crypto_pwhash_scryptsalsa208sha256(outlen:Int, passwd:String, salt:String, opslimit:Int, memlimit:Int):String;
    public static function crypto_pwhash_scryptsalsa208sha256_is_available():Bool;
    public static function crypto_pwhash_scryptsalsa208sha256_str(passwd:String, opslimit:Int, memlimit:Int):String;
    public static function crypto_pwhash_scryptsalsa208sha256_str_verify(passwd:String, hash:String):Bool;
    public static function crypto_scalarmult(secretKey:String, publicKey:String):String;
    public static function crypto_scalarmult_base(secretKey:String):String;
    public static function crypto_secretbox(plaintext:String, nonce:String, key:String):String;
    public static function crypto_secretbox_open(ciphertext:String, nonce:String, key:String):String;
    public static function crypto_secretbox_keygen():String;
    public static function crypto_secretbox_xchacha20poly1305(plaintext:String, nonce:String, key:String):String;
    public static function crypto_secretbox_xchacha20poly1305_open(ciphertext:String, nonce:String, key:String):String;
    public static function crypto_secretstream_xchacha20poly1305_init_push(key:String):Array<wordpress. string>;
    public static function crypto_secretstream_xchacha20poly1305_init_pull(header:String, key:String):String;
    public static function crypto_secretstream_xchacha20poly1305_push(state:String, msg:String, ?aad:String, ?tag:Int):String;
    public static function crypto_secretstream_xchacha20poly1305_pull(state:String, msg:String, ?aad:String):Dynamic;
    public static function crypto_secretstream_xchacha20poly1305_keygen():String;
    public static function crypto_secretstream_xchacha20poly1305_rekey(state:String):Void;
    public static function crypto_shorthash(message:String, key:String):String;
    public static function crypto_shorthash_keygen():String;
    public static function crypto_sign(message:String, secretKey:String):String;
    public static function crypto_sign_open(signedMessage:String, publicKey:String):String;
    public static function crypto_sign_keypair():String;
    public static function crypto_sign_keypair_from_secretkey_and_publickey(sk:String, pk:String):String;
    public static function crypto_sign_seed_keypair(seed:String):String;
    public static function crypto_sign_publickey(keypair:String):String;
    public static function crypto_sign_publickey_from_secretkey(secretKey:String):String;
    public static function crypto_sign_secretkey(keypair:String):String;
    public static function crypto_sign_detached(message:String, secretKey:String):String;
    public static function crypto_sign_verify_detached(signature:String, message:String, publicKey:String):Bool;
    public static function crypto_sign_ed25519_pk_to_curve25519(pk:String):String;
    public static function crypto_sign_ed25519_sk_to_curve25519(sk:String):String;
    public static function crypto_stream(len:Int, nonce:String, key:String):String;
    public static function crypto_stream_xor(message:String, nonce:String, key:String):String;
    public static function crypto_stream_keygen():String;
    public static function hex2bin(string:String):String;
    public static function increment(var_:String):Void;
    public static function library_version_major():Int;
    public static function library_version_minor():Int;
    public static function memcmp(left:String, right:String):Int;
    public static function memzero(var_:Dynamic):Void;
    public static function pad(unpadded:String, blockSize:Int, ?dontFallback:Bool):String;
    public static function unpad(padded:String, blockSize:Int, ?dontFallback:Bool):String;
    public static function polyfill_is_fast():Bool;
    public static function randombytes_buf(numBytes:Int):String;
    public static function randombytes_uniform(range:Int):Int;
    public static function randombytes_random16():Int;
    public static function runtime_speed_test(iterations:Int, maxTimeout:Int):Bool;
    public static function version_string():String;
    protected static function use_fallback(?sodium_func_name:String):Bool;
    protected static function useNewSodiumAPI():Bool;
}

