package wordpress;
@:native('\\SMTP')
extern class SMTP {
    @:phpClassConst static public final VERSION:String;
    @:phpClassConst static public final CRLF:String;
    @:phpClassConst static public final DEFAULT_SMTP_PORT:Int;
    @:phpClassConst static public final MAX_LINE_LENGTH:Int;
    @:phpClassConst static public final DEBUG_OFF:Dynamic;
    @:phpClassConst static public final DEBUG_CLIENT:Dynamic;
    @:phpClassConst static public final DEBUG_SERVER:Dynamic;
    @:phpClassConst static public final DEBUG_CONNECTION:Dynamic;
    @:phpClassConst static public final DEBUG_LOWLEVEL:Dynamic;
    public var Version:String;
    public var SMTP_PORT:Int;
    public var CRLF:String;
    public var do_debug:Int;
    public var Debugoutput:Dynamic;
    public var do_verp:Bool;
    public var Timeout:Int;
    public var Timelimit:Int;
    protected var smtp_transaction_id_patterns:Array<Dynamic>;
    protected var last_smtp_transaction_id:Dynamic;
    protected var smtp_conn:Dynamic;
    protected var error:Array<Dynamic>;
    protected var helo_rply:Dynamic;
    protected var server_caps:Dynamic;
    protected var last_reply:String;
    protected function edebug(str:String, ?level:Int):Void;
    public function connect(host:String, ?port:Int, ?timeout:Int, ?options:Array<Dynamic>):Bool;
    public function startTLS():Bool;
    public function authenticate(username:String, password:String, ?authtype:String, ?realm:String, ?workstation:String, ?OAuth:Dynamic):Bool;
    protected function hmac(data:String, key:String):String;
    public function connected():Bool;
    public function close():Void;
    public function data(msg_data:String):Bool;
    public function hello(?host:String):Bool;
    protected function sendHello(hello:String, host:String):Bool;
    protected function parseHelloFields(type:String):Dynamic;
    public function mail(from:String):Bool;
    public function quit(?close_on_error:Bool):Bool;
    public function recipient(address:String):Bool;
    public function reset():Bool;
    protected function sendCommand(command:String, commandstring:String, expect:Dynamic):Bool;
    public function sendAndMail(from:String):Bool;
    public function verify(name:String):Bool;
    public function noop():Bool;
    public function turn():Bool;
    public function client_send(data:String):Dynamic;
    public function getError():Array<Dynamic>;
    public function getServerExtList():Dynamic;
    public function getServerExt(name:String):Dynamic;
    public function getLastReply():String;
    protected function get_lines():String;
    public function setVerp(?enabled:Bool):Dynamic;
    public function getVerp():Bool;
    protected function setError(message:String, ?detail:String, ?smtp_code:String, ?smtp_code_ex:String):Dynamic;
    public function setDebugOutput(?method:Dynamic):Dynamic;
    public function getDebugOutput():String;
    public function setDebugLevel(?level:Int):Dynamic;
    public function getDebugLevel():Int;
    public function setTimeout(?timeout:Int):Dynamic;
    public function getTimeout():Int;
    protected function errorHandler(errno:Int, errmsg:String, ?errfile:String, ?errline:Int):Dynamic;
    protected function recordLastTransactionID():Dynamic;
    public function getLastTransactionID():Dynamic;
}

